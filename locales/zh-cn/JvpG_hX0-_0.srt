1
00:00:00,000 --> 00:00:04,352
首先让我们把这个函数转换成一个类

2
00:00:04,352 --> 00:00:08,524
构造函数中的所有东西

3
00:00:08,525 --> 00:00:13,490
现在被放置到了一个名为 constructor 的方法中

4
00:00:13,490 --> 00:00:15,919
当一个新的对象通过这个类创建时

5
00:00:15,919 --> 00:00:18,859
constructor 方法将会自动运行

6
00:00:18,859 --> 00:00:21,214
如果创建对象时需要一些数据

7
00:00:21,214 --> 00:00:24,195
那么这些数据都需要包括在这里面

8
00:00:24,195 --> 00:00:27,285
所以在创建一个对象时一定要特别留意

9
00:00:27,285 --> 00:00:33,399
现在所有对象继承的方法都将放置在这个类中

10
00:00:33,399 --> 00:00:38,765
通过预置类方法写成的 startEngine 存在于原型中

11
00:00:38,765 --> 00:00:40,835
现在 它将存在于类中

12
00:00:40,835 --> 00:00:43,370
但是从功能上来说是一样

13
00:00:43,369 --> 00:00:48,379
同样的 startEngines 和 constructor 方法看起来是同一种方法

14
00:00:48,380 --> 00:00:51,875
但是 constructor 方法不在原型上 它是存在于类中的

15
00:00:51,875 --> 00:00:56,744
一个新的特殊方法 用来初始化新对象

16
00:00:56,744 --> 00:01:01,064
为了理解这一点 两者从功能上来说是完全一样的

17
00:01:01,064 --> 00:01:04,890
类语法只是一种更棒的写法

18
00:01:04,890 --> 00:01:11,194
事实上 我们用类语法创建新对象的方法和之前完全一样

19
00:01:11,194 --> 00:01:13,564
如果你已经理解了原型继承

20
00:01:13,564 --> 00:01:18,000
那么你就能很好的理解类和类方法是如何运行的

